<div class="wdghtml" taskKey="com.javarush.task.task36.task3610">
<h3>MyMultiMap</h3>
<p>Амиго, иногда существующих в <strong>Java</strong> коллекций недостаточно. Тогда можно либо взять стороннюю реализацию, например, <strong>Google Guava</strong> или <strong>Apache Commons</strong>, либо реализовать свою структуру данных. Сегодня у тебя есть уникальная возможность испытать свои силы и написать часть своей структуры данных.</p>
<p>Наша структура данных называется <strong>MyMultiMap</strong>. Она параметризована дженериками, наследуется от HashMap, и реализует интерфейсы Cloneable, Serializable. Особенность нашей мапы будет в том, что конструктор принимает число типа int repeatCount &#8212; это количество, сколько значений может хранится по одному ключу.</p>
<p><strong>Реализуй методы:</strong><br />
1) <mark>int size()</mark> &#8212; должен возвращать количество значений в нашей коллекции.<br />
2) <mark>V put(K key, V value)</mark> &#8212; должен добавить элемент <strong>value</strong> по ключу <strong>key</strong>. Если в мапе такой ключ уже есть, и количество значений по этому ключу меньше, чем <mark class="user">repeatCount</mark> &#8212; то добавь элемент <strong>value</strong> в конец листа в объекте map. Если по такому ключу количество значений равняется <mark class="user">repeatCount</mark> &#8212; то удали из листа в объекте map элемент с индексом ноль, и добавь в конец листа <strong>value</strong>. Метод должен возвращать значение последнего добавленного элемента по ключу <strong>key</strong> (но не значение, которое мы сейчас добавляем). Если по ключу key значений еще нет &#8212; верни <span class="text-neon"><strong>null</strong></span>.<br />
3) <mark>V remove(Object key)</mark> &#8212; должен удалить элемент по ключу <strong>key</strong>. Если по этому ключу хранится несколько элементов &#8212; должен удаляться элемент из листа с индексом ноль. Если по какому-то ключу хранится лист размером ноль элементов &#8212; удали такую пару ключ : значение. Метод должен возвращать элемент, который ты удалил. Если в мапе нет ключа key &#8212; верни null.<br />
4) <mark>Set&lt;K&gt; keySet()</mark> &#8212; должен вернуть сет всех ключей, которые есть в мапе map.<br />
5) <mark>Collection&lt;V&gt; values()</mark> &#8212; должен вернуть <span class="text-red">ArrayList&lt;V&gt;</span> всех значений. Порядок значений в листе не имеет значения.<br />
6) <mark>boolean containsKey(Object key)</mark> &#8212; должен вернуть true, если в мапе присутствует ключ key, иначе вернуть false.<br />
7) <mark>boolean containsValue(Object value)</mark> &#8212; должен вернуть true, если в мапе присутствует значение <strong>value</strong>, иначе вернуть <span class="text-neon"><strong>false</strong></span>.</p>
<p>Смотри пример поведения в методе <mark>main()</mark>.<br />
Метод <mark>main()</mark> не принимает участия в тестировании.</p>

</div>
