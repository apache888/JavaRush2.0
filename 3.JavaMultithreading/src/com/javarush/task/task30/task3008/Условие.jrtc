<div class="wdghtml" taskKey="com.javarush.task.task30.task3008.big02">
<h3>Чат (2)</h3>
<p>Первым делом, для удобства работы с консолью реализуем класс <span class="text-corporate"><strong>ConsoleHelper</strong></span>. В<br />
дальнейшем, вся работа с консолью должна происходить через этот класс.</p>
<p><strong>Добавь в него:</strong><br />
1. Статическое поле типа <span class="text-corporate">BufferedReader</span>, инициализированное с помощью <mark>System.in</mark>.<br />
2. Статический метод <mark>writeMessage(String <strong>message</strong>)</mark>, который должен выводить<br />
сообщение message в консоль.<br />
3. Статический метод <mark>String readString()</mark>, который должен считывать строку с<br />
консоли. Если во время чтения произошло исключение, вывести пользователю<br />
сообщение &#171;<em><strong>Произошла ошибка при попытке ввода текста. Попробуйте еще раз.</strong></em>&#187; И<br />
повторить ввод. Метод не должен пробрасывать исключения IOException наружу.<br />
Другие исключения не должны обрабатываться.<br />
4. Статический метод <mark>int readInt()</mark>. Он должен возвращать введенное число и<br />
использовать метод <mark>readString()</mark>. Внутри метода обработать исключение<br />
<strong><span class="text-corporate">NumberFormatException</span></strong>. Если оно произошло вывести сообщение &#171;<em><strong>Произошла ошибка</strong></em><br />
<em><strong> при попытке ввода числа. Попробуйте еще раз.&#187;</strong></em> И повторить ввод числа.</p>
<p>В этой задаче и далее, если не указано дополнительно другого, то все поля класса должны<br />
быть приватными, а методы публичными.</p>

<hr>
<h3>Чат (1)</h3>
<p>Сегодня мы напишем чат. Набор программ с помощью которого можно будет<br />
обмениваться текстовыми сообщения. Набор будет состоять из одного сервера и<br />
нескольких клиентов, по одному для каждого участника чата.</p>
<p>Начнем с сервера. Нам понадобятся такие классы:<br />
1) <span class="text-corporate"><strong>Server</strong></span> – основной класс сервера.<br />
2) <span class="text-corporate"><strong>MessageType</strong></span> – <strong>enum</strong>, который отвечает за тип сообщений пересылаемых между<br />
клиентом и сервером.<br />
3) <span class="text-corporate"><strong>Message</strong></span> – класс, отвечающий за пересылаемые сообщения.<br />
4) <strong><span class="text-corporate">Connection</span></strong> – класс соединения между клиентом и сервером.<br />
5) <span class="text-corporate"><strong>ConsoleHelper</strong></span> – вспомогательный класс, для чтения или записи в консоль.</p>
<p>Создай эти классы и добавь метод <mark>main</mark> в класс <strong><span class="text-corporate">Server</span></strong>.</p>

</div>
