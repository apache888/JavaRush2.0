<div class="wdghtml" taskKey="com.javarush.task.task30.task3010">
<h3>Минимальное допустимое основание системы счисления</h3>
<p>В метод main первым аргументом приходит строка, которая содержит последовательность символов (<em>Все символы в строке имеют коды в таблице</em> <strong>ASCII</strong> <em>от</em> <span class="text-user"><strong>32</strong></span> <em>до</em> <span class="text-user"><strong>127</strong></span> <em>включительно</em>). Длина строки не превышает <span class="text-user"><strong>255</strong></span> <strong>символов</strong>. Нужно реализовать программу, которая по входящей строке определит, является ли содержимое строки записью числа в системе счисления с основанием не больше <span class="text-user"><strong>36</strong></span> включительно. Если является &#8212; нужно вывести минимальное основание системы счисления, в которой это число может существовать. Если не является &#8212; необходимо вывести &#171;incorrect&#187;.<br />
В системах счисления с основанием большим <span class="text-user"><strong>10</strong></span> в качестве цифр используются латинские буквы. К примеру, числу <strong><span class="text-user">35</span></strong> в десятичной системе соответствует число &#171;<em><strong>Z</strong></em>&#187; в системе с основанием <span class="text-user"><strong>36</strong></span>. Так как рассматриваем позиционные системы счисления &#8212; минимальное основание, которое должна выводить программа, это <strong><span class="text-user">2</span></strong>.<br />
Если возникают любые исключения &#8212; перехватывай их и не выводи стек-трейс.</p>
<p><strong>Пример1:</strong><br />
<strong>Вход:<br />
</strong><code>00</code><br />
<strong>Ожидаемый вывод:<br />
</strong><code>2</code></p>
<p><strong>Пример2:</strong><br />
<strong>Вход:<br />
</strong><code>12AS08z</code><br />
<strong>Ожидаемый вывод:<br />
</strong><code>36</code></p>
<p><strong>Пример3:</strong><br />
<strong>Вход:<br />
</strong><code>12AS08Z/</code><br />
<strong>Ожидаемый вывод:<br />
</strong><code>incorrect</code></p>

</div>
